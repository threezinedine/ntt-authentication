name: Authentication CI CD

on:
    push:
        branches:
            - main

jobs:
    build-test:
        name: Build and Testing the project
        runs-on: ubuntu-22.04
        steps:
            - name: Checking out the code
              uses: actions/checkout@v4

            - name: Setup NodeJS v23.7.0
              uses: actions/setup-node@v4

            - name: Start MySQL server using docker
              run: |
                  docker run -d --name mysql-server -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=authentication -p 3306:3306 mysql:8.0

            - name: Install dependencies
              run: cd service && npm install

            - name: Change the .github.env file to .env
              run: cd service && cp .github.env .env && cat .env

            - name: Run tests
              run: cd service && npm run test

    deploy:
        name: Deploy the project
        runs-on: ubuntu-22.04
        needs: build-test
        steps:
            - name: Checkout the code
              uses: actions/checkout@v4

            - name: Setup SSH
              run: |
                  mkdir -p ~/.ssh/
                  echo "${{secrets.VPS_SSH_PRIVATE}}" > ~/.ssh/id_rsa
                  chmod 600 ~/.ssh/id_rsa
                  ssh-keyscan -H ${{secrets.VPS_IP}} >> ~/.ssh/known_hosts

            - name: Deploy to the VPS
              uses: appleboy/ssh-action@v1
              with:
                  host: ${{secrets.VPS_IP}}
                  username: root
                  key: ${{secrets.VPS_SSH_PRIVATE}}
                  script: |
                      cd ~ &&rm -r ntt-authentication
                      cd ~ && git clone https://github.com/threezinedine/ntt-authentication.git
                      cd ~/ntt-authentication/service && rm .deploy.env
                      cd ~/ntt-authentication/service && echo HOST=0.0.0.0 > .deploy.env
                      cd ~/ntt-authentication/service && echo PORT=8080 >> .deploy.env
                      cd ~/ntt-authentication/service && echo MYSQL_HOST=${{secrets.MYSQL_HOST}} >> .deploy.env
                      cd ~/ntt-authentication/service && echo MYSQL_PORT=${{secrets.MYSQL_PORT}} >> .deploy.env
                      cd ~/ntt-authentication/service && echo MYSQL_USER=${{secrets.MYSQL_USER}} >> .deploy.env
                      cd ~/ntt-authentication/service && echo "MYSQL_PASSWORD=${{secrets.MYSQL_PASSWORD}}" >> .deploy.env
                      cd ~/ntt-authentication/service && echo MYSQL_DATABASE=${{secrets.MYSQL_DATABASE}} >> .deploy.env
                      cd ~/ntt-authentication/service && echo ACCESS_TOKEN_SECRET=${{secrets.ACCESS_TOKEN_SECRET}} >> .deploy.env
                      cd ~/ntt-authentication/service && echo REFRESH_TOKEN_SECRET=${{secrets.REFRESH_TOKEN_SECRET}} >> .deploy.env
                      cd ~/ntt-authentication/service && echo ACCESS_TOKEN_EXPIRES_IN=${{secrets.ACCESS_TOKEN_EXPIRES_IN}} >> .deploy.env
                      cd ~/ntt-authentication/service && echo REFRESH_TOKEN_EXPIRES_IN=${{secrets.REFRESH_TOKEN_EXPIRES_IN}} >> .deploy.env
                      cd ~/ntt-authentication/service && echo SUPER_ADMIN_USERNAME=${{secrets.SUPER_ADMIN_USERNAME}} >> .deploy.env
                      cd ~/ntt-authentication/service && echo SUPER_ADMIN_PASSWORD=${{secrets.SUPER_ADMIN_PASSWORD}} >> .deploy.env
                      cd ~/ntt-authentication/service && echo MODE=production >> .deploy.env
                      cd ~/ntt-authentication/service && cat .deploy.env
                      cd ~/ntt-authentication/service && docker compose down
                      docker image prune -f
                      cd ~/ntt-authentication && docker compose up -d --build
